package game.league.trofeocuarentena.entities;

import java.io.Serializable;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.Data;

//I can't use @Data because createS some problems in Eclipse and autogenerated toString(). Errors of infinite Loop with oneToMany
@Entity
@Table(name="leagues")
public class Leagues implements Serializable {
	
	@Id
	@Column(name="ID")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private long id;
	
	@Column(name="NAME", nullable= false, unique = true, length = 100)
	private String name;
	
	@ManyToOne(optional = false, fetch = FetchType.EAGER)
	@JoinColumn(name = "STATUS_ID", nullable = false, referencedColumnName = "ID")
	private LeagueStatus leagueStatus; 
	
	@JsonIgnore //necessary to avoid infinite loop by toString() and Results. See https://stackoverflow.com/questions/54570757/stack-overflow-on-hibernate-caused-by-one-to-many-relationship/54571390
	@OneToMany(cascade = CascadeType.ALL, mappedBy = "league")
    private List<Results> results;

	public Leagues() {
		// TODO Auto-generated constructor stub
	}

	public Leagues(String name) {
		this.name = name;
	}
	
	public Leagues(long id, String name) {
		this.id = id;
		this.name = name;
	}
	
	public Leagues(long id, String name, LeagueStatus leagueStatus) {
		this.id = id;
		this.name = name;
		this.leagueStatus = leagueStatus;
	}
	
	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	public LeagueStatus getLeagueStatus() {
		return leagueStatus;
	}

	public void setLeagueStatus(LeagueStatus leagueStatus) {
		this.leagueStatus = leagueStatus;
	}

	public List<Results> getResults() {
		return results;
	}

	public void setResults(List<Results> results) {
		this.results = results;
	}

	@Override
	public String toString() {
		return "Leagues [id=" + id + ", name=" + name + ", leagueStatus=" + leagueStatus + "]";
	}
	
	



}
